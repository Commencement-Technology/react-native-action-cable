var EventEmitter,Subscription,boundMethodCheck=function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")};EventEmitter=require("eventemitter3"),Subscription=function(){var e;class t extends EventEmitter{constructor(t,i={},n){super(),this.perform=this.perform.bind(this),this.send=this.send.bind(this),this.unsubscribe=this.unsubscribe.bind(this),this.connected=this.connected.bind(this),this.disconnected=this.disconnected.bind(this),this.rejected=this.rejected.bind(this),this.received=this.received.bind(this),this.consumer=t,this.identifier=JSON.stringify(i),e(this,n)}perform(e,i={}){return boundMethodCheck(this,t),i.action=e,this.send(i)}send(e){return boundMethodCheck(this,t),this.consumer.send({command:"message",identifier:this.identifier,data:JSON.stringify(e)})}unsubscribe(){return boundMethodCheck(this,t),this.consumer.subscriptions.remove(this)}connected(){return boundMethodCheck(this,t),this.emit("connected")}disconnected(){return boundMethodCheck(this,t),this.emit("disconnected")}rejected(){return boundMethodCheck(this,t),this.emit("rejected")}received(e){return boundMethodCheck(this,t),e.action=null!=e.action?e.action:"received",this.emit(e.action,e)}}return e=function(e,t){var i,n;if(null!=t)for(i in t)n=t[i],e[i]=n;return e},t}.call(this),module.exports=Subscription;