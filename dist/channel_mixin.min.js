!function(n){function e(o){if(t[o])return t[o].exports;var r=t[o]={exports:{},id:o,loaded:!1};return n[o].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var t={};return e.m=n,e.c=t,e.p="",e(0)}([function(n,e,t){var o,r;r=t(1),o=function(){var n;return n=Array.prototype.slice.call(arguments),{componentDidMount:function(){var e,t,o,c,a,i;for(t=this.props.cable||this.context.cable,this.mounted=!0,i=[],c=0,a=n.length;a>c;c++)o=n[c],t.channel(o).on("connected",this.handleConnected),t.channel(o).on("disconnected",this.handleDisconnected),t.channel(o).on("rejected",this.handleDisconnected),i.push(function(){var n,c,a,i;for(a=t.channel(o).actions,i=[],n=0,c=a.length;c>n;n++)e=a[n],i.push(t.channel(o).on(e,this["handle"+r(e)]()));return i}.call(this));return i},componentWillUnmount:function(){var e,t,o,c,a,i;for(t=this.props.cable||this.context.cable,this.mounted=!1,i=[],c=0,a=n.length;a>c;c++)o=n[c],t.channel(o).removeListener("connected",this.handleConnected),t.channel(o).removeListener("disconnected",this.handleDisconnected),t.channel(o).removeListener("rejected",this.handleDisconnected),i.push(function(){var n,c,a,i;for(a=t.channel(o).actions,i=[],n=0,c=a.length;c>n;n++)e=a[n],i.push(t.channel(o).removeListener(e,this["handle"+r(e)]()));return i}.call(this));return i},perform:function(n,e,t){var o;return null==t&&(t={}),o=this.props.cable||this.context.cable,o.channel(n).perform(e,t)}}},o.componentWillMount=function(){throw new Error('ActionCableReact.ChannelMixin is a function that takes one or more store names as parameters and returns the mixin, e.g.: mixins: [ActionCableReact.ChannelMixin("Channel1", "Channel2")]')},n.exports=o},function(n,e,t){function o(n){return n=r(n),n&&n.charAt(0).toUpperCase()+n.slice(1)}var r=t(2);n.exports=o},function(n,e){function t(n){return null==n?"":n+""}n.exports=t}]);